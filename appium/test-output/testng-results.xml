<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="11" passed="10" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-06-18T11:04:45 IST" name="Default suite" finished-at="2025-06-18T11:06:35 IST" duration-ms="110086">
    <groups>
    </groups>
    <test started-at="2025-06-18T11:04:45 IST" name="Default test" finished-at="2025-06-18T11:06:35 IST" duration-ms="110086">
      <class name="Tests.TestCase1">
        <test-method is-config="true" signature="setUp()[pri:0, instance:Tests.TestCase1@273444fe]" started-at="2025-06-18T11:04:41 IST" name="setUp" finished-at="2025-06-18T11:04:45 IST" duration-ms="4551" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="configTest()[pri:0, instance:Tests.TestCase1@273444fe]" started-at="2025-06-18T11:04:45 IST" name="configTest" finished-at="2025-06-18T11:04:50 IST" duration-ms="5237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configTest -->
        <test-method signature="allAppLaunch(java.lang.String)[pri:0, instance:Tests.TestCase1@273444fe]" started-at="2025-06-18T11:04:50 IST" name="allAppLaunch" description="Launching all the apps one by one" data-provider="appName" finished-at="2025-06-18T11:05:01 IST" duration-ms="10380" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hotstar]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allAppLaunch -->
        <test-method signature="allAppLaunch(java.lang.String)[pri:0, instance:Tests.TestCase1@273444fe]" started-at="2025-06-18T11:05:01 IST" name="allAppLaunch" description="Launching all the apps one by one" data-provider="appName" finished-at="2025-06-18T11:05:01 IST" duration-ms="345" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[JioTV+]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Application is not launched, either app is not available in our list expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Application is not launched, either app is not available in our list expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at Tests.TestCase1.allAppLaunch(TestCase1.java:30)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allAppLaunch -->
        <test-method signature="allAppLaunch(java.lang.String)[pri:0, instance:Tests.TestCase1@273444fe]" started-at="2025-06-18T11:05:01 IST" name="allAppLaunch" description="Launching all the apps one by one" data-provider="appName" finished-at="2025-06-18T11:05:12 IST" duration-ms="10478" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Netflix]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allAppLaunch -->
        <test-method signature="allAppLaunch(java.lang.String)[pri:0, instance:Tests.TestCase1@273444fe]" started-at="2025-06-18T11:05:12 IST" name="allAppLaunch" description="Launching all the apps one by one" data-provider="appName" finished-at="2025-06-18T11:05:22 IST" duration-ms="10459" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[primevideo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allAppLaunch -->
        <test-method signature="allAppLaunch(java.lang.String)[pri:0, instance:Tests.TestCase1@273444fe]" started-at="2025-06-18T11:05:22 IST" name="allAppLaunch" description="Launching all the apps one by one" data-provider="appName" finished-at="2025-06-18T11:05:33 IST" duration-ms="10505" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[youtube]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allAppLaunch -->
        <test-method signature="allAppLaunch(java.lang.String)[pri:0, instance:Tests.TestCase1@273444fe]" started-at="2025-06-18T11:05:33 IST" name="allAppLaunch" description="Launching all the apps one by one" data-provider="appName" finished-at="2025-06-18T11:05:43 IST" duration-ms="10428" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[zee5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allAppLaunch -->
        <test-method signature="allAppLaunch(java.lang.String)[pri:0, instance:Tests.TestCase1@273444fe]" started-at="2025-06-18T11:05:43 IST" name="allAppLaunch" description="Launching all the apps one by one" data-provider="appName" finished-at="2025-06-18T11:05:53 IST" duration-ms="10431" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sonyLiv]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allAppLaunch -->
        <test-method signature="allAppLaunch(java.lang.String)[pri:0, instance:Tests.TestCase1@273444fe]" started-at="2025-06-18T11:05:53 IST" name="allAppLaunch" description="Launching all the apps one by one" data-provider="appName" finished-at="2025-06-18T11:06:04 IST" duration-ms="10471" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[sunNxt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allAppLaunch -->
        <test-method signature="allAppLaunch(java.lang.String)[pri:0, instance:Tests.TestCase1@273444fe]" started-at="2025-06-18T11:06:04 IST" name="allAppLaunch" description="Launching all the apps one by one" data-provider="appName" finished-at="2025-06-18T11:06:14 IST" duration-ms="10479" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docubay]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allAppLaunch -->
        <test-method signature="allAppLaunch(java.lang.String)[pri:0, instance:Tests.TestCase1@273444fe]" started-at="2025-06-18T11:06:14 IST" name="allAppLaunch" description="Launching all the apps one by one" data-provider="appName" finished-at="2025-06-18T11:06:25 IST" duration-ms="10399" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hoichoi]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allAppLaunch -->
        <test-method signature="allAppLaunch(java.lang.String)[pri:0, instance:Tests.TestCase1@273444fe]" started-at="2025-06-18T11:06:25 IST" name="allAppLaunch" description="Launching all the apps one by one" data-provider="appName" finished-at="2025-06-18T11:06:35 IST" duration-ms="10414" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[discoveryplus]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allAppLaunch -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Tests.TestCase1@273444fe]" started-at="2025-06-18T11:06:35 IST" name="tearDown" finished-at="2025-06-18T11:06:35 IST" duration-ms="32" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.TestCase1 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
